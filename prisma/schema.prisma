datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// datasource db {
//   provider  = "postgresql"
//   url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
//   directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
// }

generator client {
  provider = "prisma-client-js"
}

model Access {
  id           Int      @id @default(autoincrement())
  type_user_id Int
  type_user    TypeUser @relation(fields: [type_user_id], references: [id])

  @@index([type_user_id])
  @@map("access")
}

model TypeUser {
  id        Int      @id @default(autoincrement())
  type_name String   @db.VarChar(45)
  users     User[]
  access    Access[]

  @@map("typeuser")
}

model User {
  id           Int      @id @default(autoincrement())
  name         String   @db.VarChar(255)
  email        String   @unique
  telefono     String   @db.VarChar(45)
  password     String   @db.VarChar(255)
  type_user_id Int
  sede_id      Int?
  type_user    TypeUser @relation(fields: [type_user_id], references: [id])
  sede         Sede?    @relation(fields: [sede_id], references: [id])

  @@index([type_user_id])
  @@map("user")
}

model Sede {
  id                         Int                          @id @default(autoincrement())
  name                       String                       @db.VarChar(45)
  combustibles               Combustible[]
  fertilizante               Fertilizante[]
  ConsumoPapel               ConsumoPapel[]
  combustibleCalculos        combustibleCalculos[]
  taxi                       Taxi[]
  fertilizanteCalculos       fertilizanteCalculos[]
  area                       area[]
  User                       User[]
  combustibleCalculosDetail  combustibleCalculosDetail[]
  ConsumoPapelCalculosDetail ConsumoPapelCalculosDetail[]
  ConsumoPapelCalculos       ConsumoPapelCalculos[]
  fertilizanteCalculosDetail fertilizanteCalculosDetail[]
  Refrigerante               Refrigerante[]
  RefrigeranteCalculos       RefrigeranteCalculos[]
  RefrigeranteCalculosDetail RefrigeranteCalculosDetail[]
  Consumible                 Consumible[]
  ConsumibleCalculos         ConsumibleCalculos[]
  ConsumibleCalculosDetail   ConsumibleCalculosDetail[]
  TaxiCalculos               TaxiCalculos[]
  TaxiCalculosDetail         TaxiCalculosDetail[]

  @@map("sede")
}

model tipoCombustibleFactor {
  id                        Int                         @id @default(autoincrement())
  valorCalorico             Float
  factorEmisionCO2          Float
  factorEmisionCH4          Float
  factorEmisionN2O          Float
  anio_id                   Int
  tipoCombustible_id        Int
  created_at                DateTime
  updated_at                DateTime
  anio                      Anio                        @relation(fields: [anio_id], references: [id])
  tipoCombustible           tipoCombustible             @relation(fields: [tipoCombustible_id], references: [id])
  combustibleCalculosDetail combustibleCalculosDetail[]

  @@map("tipocombustiblefactor")
}

model tipoCombustible {
  id          Int    @id @default(autoincrement())
  nombre      String @db.VarChar(45)
  abreviatura String @db.VarChar(45)
  unidad      String @db.VarChar(45)

  created_at            DateTime
  updated_at            DateTime
  tipoCombustibleFactor tipoCombustibleFactor[]
  Combustible           Combustible[]
  combustibleCalculos   combustibleCalculos[]

  @@map("tipocombustible")
}

model Mes {
  id             Int              @id @default(autoincrement())
  nombre         String           @db.VarChar(45)
  created_at     DateTime
  updated_at     DateTime
  combustibles   Combustible[]
  Taxi           Taxi[]
  consumoEnergia consumoEnergia[]
  ConsumoAgua    ConsumoAgua[]
  Consumible     Consumible[]

  @@map("mes")
}

model Anio {
  id         Int      @id @default(autoincrement())
  nombre     String   @db.VarChar(45)
  created_at DateTime
  updated_at DateTime

  combustibles               Combustible[]
  fertilizante               Fertilizante[]
  consumoPapel               ConsumoPapel[]
  Taxi                       Taxi[]
  consumoEnergia             consumoEnergia[]
  factorConversionSEIN       factorConversionSEIN[]
  ConsumoAgua                ConsumoAgua[]
  tipoCombustibleFactor      tipoCombustibleFactor[]
  FactorEmisionAgua          FactorEmisionAgua[]
  FactorTipoPapel            FactorTipoPapel[]
  ConsumoPapelCalculosDetail ConsumoPapelCalculosDetail[]
  FactorEmisionFertilizante  FactorEmisionFertilizante[]
  Refrigerante               Refrigerante[]
  FactorTipoRefrigerante     FactorTipoRefrigerante[]
  RefrigeranteCalculosDetail RefrigeranteCalculosDetail[]
  FactorTipoConsumible       FactorTipoConsumible[]
  Consumible                 Consumible[]
  ConsumibleCalculosDetail   ConsumibleCalculosDetail[]
  FactorEmisionTaxi          FactorEmisionTaxi[]

  @@map("anio")
}

model Combustible {
  id                 Int    @id @default(autoincrement())
  tipo               String @db.VarChar(45)
  tipoEquipo         String @db.VarChar(45)
  consumo            Float
  tipoCombustible_id Int
  mes_id             Int
  anio_id            Int
  sede_id            Int
  anio_mes           Int

  created_at DateTime
  updated_at DateTime

  tipoCombustible tipoCombustible? @relation(fields: [tipoCombustible_id], references: [id])
  mes             Mes?             @relation(fields: [mes_id], references: [id])
  anio            Anio?            @relation(fields: [anio_id], references: [id])
  sede            Sede?            @relation(fields: [sede_id], references: [id])

  @@map("combustible")
}

model Documento {
  id        Int    @id @default(autoincrement())
  nombre    String @db.VarChar(255)
  contenido Bytes

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  fertilizante Fertilizante?

  @@map("documento")
}

model TipoFertilizante {
  id                  Int      @id @default(autoincrement())
  clase               String   @db.VarChar(45) // Organico o Sintetico
  nombre              String   @db.VarChar(45)
  porcentajeNitrogeno Float
  unidad              String   @db.VarChar(45)
  created_at          DateTime @default(now())
  updated_at          DateTime @updatedAt

  fertilizantes              Fertilizante[]
  fertilizanteCalculos       fertilizanteCalculos[]
  fertilizanteCalculosDetail fertilizanteCalculosDetail[]

  @@map("tipofertilizante")
}

model FactorEmisionFertilizante {
  id      Int   @id @default(autoincrement())
  valor   Float
  anio_id Int

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  anio                       Anio                         @relation(fields: [anio_id], references: [id])
  fertilizanteCalculosDetail fertilizanteCalculosDetail[]

  @@map("factoremisionfertilizante")
}

model Fertilizante {
  id                  Int     @id @default(autoincrement())
  tipoFertilizante_id Int
  cantidad            Float
  is_ficha            Boolean @default(false)
  ficha_id            Int?    @unique
  sede_id             Int?
  anio_id             Int?

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  tipoFertilizante TipoFertilizante? @relation(fields: [tipoFertilizante_id], references: [id])
  ficha            Documento?        @relation(fields: [ficha_id], references: [id])
  sede             Sede?             @relation(fields: [sede_id], references: [id])
  anio             Anio?             @relation(fields: [anio_id], references: [id])

  @@map("fertilizante")
}

model TipoPapel {
  id                   Int     @id @default(autoincrement())
  nombre               String  @db.VarChar(50)
  largo                Float // cm
  ancho                Float // cm
  area                 Float // m2
  gramaje              Float // densidad
  unidad_paquete       String  @db.VarChar(45)
  porcentaje_reciclado Float?
  porcentaje_virgen    Float?
  nombre_certificado   String? @db.VarChar(50)

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  consumoPapel         ConsumoPapel[]
  FactorTipoPapel      FactorTipoPapel[]
  ConsumoPapelCalculos ConsumoPapelCalculos[]

  @@map("tipopapel")
}

model FactorTipoPapel {
  id          Int   @id @default(autoincrement())
  tipoPapelId Int
  reciclado   Float
  virgen      Float
  anioId      Int

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  tipoPapel                  TipoPapel?                   @relation(fields: [tipoPapelId], references: [id])
  anio                       Anio?                        @relation(fields: [anioId], references: [id])
  ConsumoPapelCalculosDetail ConsumoPapelCalculosDetail[]

  @@map("factortipopapel")
}

model ConsumoPapel {
  id               Int     @id @default(autoincrement())
  tipoPapel_id     Int
  cantidad_paquete Int
  comentario       String?
  anio_id          Int
  sede_id          Int?

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  tipoPapel TipoPapel @relation(fields: [tipoPapel_id], references: [id])
  anio      Anio      @relation(fields: [anio_id], references: [id])
  sede      Sede?     @relation(fields: [sede_id], references: [id])

  @@map("consumopapel")
}

model ConsumoPapelCalculos {
  id           Int   @id @default(autoincrement())
  tipoPapel_id Int
  cantidad     Float // registro
  consumo      Float
  period_id    Int
  sede_id      Int
  totalGEI     Float

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  tipoPapel TipoPapel      @relation(fields: [tipoPapel_id], references: [id])
  sede      Sede?          @relation(fields: [sede_id], references: [id])
  Periodo   PeriodoCalculo @relation(fields: [period_id], references: [id])

  ConsumoPapelCalculosDetail ConsumoPapelCalculosDetail[]

  @@map("consumopapelcalculos")
}

model ConsumoPapelCalculosDetail {
  id                     Int   @id @default(autoincrement())
  cantidad               Float // registro
  factorTipoPapelId      Int
  consumo                Float
  totalGEI               Float
  consumoPapelCalculosId Int
  sedeId                 Int
  anioId                 Int

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  factorTipoPapel      FactorTipoPapel      @relation(fields: [factorTipoPapelId], references: [id])
  consumoPapelCalculos ConsumoPapelCalculos @relation(fields: [consumoPapelCalculosId], references: [id])
  sede                 Sede?                @relation(fields: [sedeId], references: [id])
  anio                 Anio?                @relation(fields: [anioId], references: [id])

  @@map("consumopapelcalculosdetail")
}

// CALCULOS
// POTENCIAL DE CALIENTAMIENTO GLOBAL
model GWP {
  id         Int      @id @default(autoincrement())
  nombre     String   @db.VarChar(45)
  formula    String   @db.VarChar(45)
  valor      Float
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("gwp")
}

// A1_1 COMBUSTIBLES
model combustibleCalculos {
  id                Int    @id @default(autoincrement())
  tipo              String @db.VarChar(45)
  consumoTotal      Float
  consumo           Float
  emisionCO2        Float
  emisionCH4        Float
  emisionN2O        Float
  totalGEI          Float
  sedeId            Int
  periodoCalculoId  Int?
  tipoCombustibleId Int

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  sede            Sede?            @relation(fields: [sedeId], references: [id])
  PeriodoCalculo  PeriodoCalculo?  @relation(fields: [periodoCalculoId], references: [id])
  tipoCombustible tipoCombustible? @relation(fields: [tipoCombustibleId], references: [id])

  combustibleCalculosDetail combustibleCalculosDetail[]

  @@map("combustiblecalculos")
}

model combustibleCalculosDetail {
  id                      Int    @id @default(autoincrement())
  tipo                    String @db.VarChar(45)
  tipoCombustibleFactorId Int
  consumoTotal            Float
  valorCalorico           Float
  consumo                 Float
  emisionCO2              Float
  emisionCH4              Float
  emisionN2O              Float
  totalGEI                Float
  sedeId                  Int
  combustibleCalculosId   Int

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  tipoCombustibleFactor tipoCombustibleFactor? @relation(fields: [tipoCombustibleFactorId], references: [id])
  sede                  Sede?                  @relation(fields: [sedeId], references: [id])
  combustibleCalculos   combustibleCalculos?   @relation(fields: [combustibleCalculosId], references: [id])

  @@map("combustiblecalculosdetail")
}

// // A1_5 - FERTILIZANTES
// model factorEmision {
//   id                   Int                    @id @default(autoincrement())
//   valor                Float          s
//   fertilizanteCalculos fertilizanteCalculos[]
// }

model fertilizanteCalculos {
  id                     Int    @id @default(autoincrement())
  tipofertilizanteId     Int
  consumoTotal           Float
  cantidadAporte         Float
  emisionDirecta         Float
  totalEmisionesDirectas Float
  emisionGEI             Float?
  sedeId                 Int
  periodoCalculoId       Int?

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  sede                       Sede?                        @relation(fields: [sedeId], references: [id])
  periodoCalculo             PeriodoCalculo?              @relation(fields: [periodoCalculoId], references: [id])
  TipoFertilizante           TipoFertilizante?            @relation(fields: [tipofertilizanteId], references: [id])
  fertilizanteCalculosDetail fertilizanteCalculosDetail[]

  @@map("fertilizantecalculos")
}

model fertilizanteCalculosDetail {
  id                     Int   @id @default(autoincrement())
  tipofertilizanteId     Int
  factorEmisionId        Int
  consumo                Float
  cantidadAporte         Float
  emisionDirecta         Float
  totalEmisionesDirectas Float
  emisionGEI             Float
  sedeId                 Int
  fertilizanteCalculosId Int

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  TipoFertilizante     TipoFertilizante          @relation(fields: [tipofertilizanteId], references: [id])
  factorEmision        FactorEmisionFertilizante @relation(fields: [factorEmisionId], references: [id])
  sede                 Sede?                     @relation(fields: [sedeId], references: [id])
  fertilizanteCalculos fertilizanteCalculos      @relation(fields: [fertilizanteCalculosId], references: [id])

  @@map("fertilizantecalculosdetail")
}

model consumoEnergia {
  id               Int    @id @default(autoincrement())
  areaId           Int
  numeroSuministro String @db.VarChar(45)
  consumo          Float
  mes_id           Int
  anio_id          Int
  anio_mes         Int

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  mes  Mes?  @relation(fields: [mes_id], references: [id])
  anio Anio? @relation(fields: [anio_id], references: [id])
  area area? @relation(fields: [areaId], references: [id])

  @@map("consumoenergia")
}

model area {
  id         Int      @id @default(autoincrement())
  nombre     String   @db.VarChar(45)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  sede_id    Int?

  sede Sede? @relation(fields: [sede_id], references: [id])

  ConsumoAgua               ConsumoAgua[]
  ConsumoAguaCalculos       ConsumoAguaCalculos[]
  consumoEnergia            consumoEnergia[]
  EnergiaCalculos           EnergiaCalculos[]
  EnergiaCalculosDetail     EnergiaCalculosDetail[]
  ConsumoAguaCalculosDetail ConsumoAguaCalculosDetail[]

  @@map("area")
}

model EnergiaCalculos {
  id               Int   @id @default(autoincrement())
  consumoArea      Float
  factorConversion Float
  consumoTotal     Float
  emisionCO2       Float
  emisionCH4       Float
  emisionN2O       Float
  totalGEI         Float
  areaId           Int
  periodoCalculoId Int?

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  area                  area?                   @relation(fields: [areaId], references: [id])
  PeriodoCalculo        PeriodoCalculo?         @relation(fields: [periodoCalculoId], references: [id])
  EnergiaCalculosDetail EnergiaCalculosDetail[]

  @@map("energiacalculos")
}

model EnergiaCalculosDetail {
  id                     Int   @id @default(autoincrement())
  consumoArea            Float
  factorConversion       Float
  factorConversionSEINId Int
  consumoTotal           Float
  emisionCO2             Float
  emisionCH4             Float
  emisionN2O             Float
  totalGEI               Float
  areaId                 Int
  energiaCalculosId      Int

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  area                 area?                @relation(fields: [areaId], references: [id])
  EnergiaCalculos      EnergiaCalculos      @relation(fields: [energiaCalculosId], references: [id])
  factorConversionSEIN factorConversionSEIN @relation(fields: [factorConversionSEINId], references: [id])

  @@map("energiacalculosdetail")
}

model factorConversionSEIN {
  id         Int      @id @default(autoincrement())
  factorCO2  Float
  factorCH4  Float
  factorN2O  Float
  anioId     Int      @unique
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  anio                  Anio                    @relation(fields: [anioId], references: [id])
  EnergiaCalculosDetail EnergiaCalculosDetail[]

  @@map("factorconversionsein")
}

model FactorEmisionTaxi {
  id      Int   @id @default(autoincrement())
  factor  Float
  anio_id Int

  anio               Anio                 @relation(fields: [anio_id], references: [id])
  TaxiCalculosDetail TaxiCalculosDetail[]

  @@map("factoremisiontaxi")
}

model Taxi {
  id                Int    @id @default(autoincrement())
  unidadContratante String
  lugarSalida       String
  lugarDestino      String
  montoGastado      Float
  kmRecorrido       Float
  sede_id           Int
  mes_id            Int
  anio_id           Int
  anio_mes          Int

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  mes  Mes?  @relation(fields: [mes_id], references: [id])
  anio Anio? @relation(fields: [anio_id], references: [id])
  sede Sede? @relation(fields: [sede_id], references: [id])

  @@map("taxi")
}

model TaxiCalculos {
  id               Int   @id @default(autoincrement())
  consumo          Float
  totalGEI         Float
  sedeId           Int
  periodoCalculoId Int?

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  sede               Sede?                @relation(fields: [sedeId], references: [id])
  PeriodoCalculo     PeriodoCalculo?      @relation(fields: [periodoCalculoId], references: [id])
  TaxiCalculosDetail TaxiCalculosDetail[]

  @@map("taxicalculos")
}

model TaxiCalculosDetail {
  id                  Int      @id @default(autoincrement())
  consumo             Float
  factorEmisionTaxiId Int
  totalGEI            Float
  sedeId              Int
  taxiCalculosId      Int
  created_at          DateTime @default(now())
  updated_at          DateTime @updatedAt

  sede          Sede?              @relation(fields: [sedeId], references: [id])
  factorEmision FactorEmisionTaxi? @relation(fields: [factorEmisionTaxiId], references: [id])
  taxiCalculos  TaxiCalculos       @relation(fields: [taxiCalculosId], references: [id])

  @@map("taxicalculosdetail")
}

// AGUA A3_5
model ConsumoAgua {
  id            Int     @id @default(autoincrement())
  consumo       Float
  codigoMedidor String? @db.VarChar(45)
  fuenteAgua    String  @db.VarChar(45) // Red Publica o Pozo
  area_id       Int?
  mes_id        Int
  anio_id       Int
  anio_mes      Int

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  anio Anio  @relation(fields: [anio_id], references: [id])
  mes  Mes   @relation(fields: [mes_id], references: [id])
  area area? @relation(fields: [area_id], references: [id])

  @@map("consumoagua")
}

model FactorEmisionAgua {
  id      Int   @id @default(autoincrement())
  factor  Float
  anio_id Int

  anio                      Anio                        @relation(fields: [anio_id], references: [id])
  ConsumoAguaCalculosDetail ConsumoAguaCalculosDetail[]

  @@map("factoremisionagua")
}

model ConsumoAguaCalculos {
  id               Int   @id @default(autoincrement())
  consumoArea      Float
  totalGEI         Float
  areaId           Int
  periodoCalculoId Int?

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  area                      area?                       @relation(fields: [areaId], references: [id])
  PeriodoCalculo            PeriodoCalculo?             @relation(fields: [periodoCalculoId], references: [id])
  ConsumoAguaCalculosDetail ConsumoAguaCalculosDetail[]

  @@map("consumoaguacalculos")
}

model ConsumoAguaCalculosDetail {
  id                    Int   @id @default(autoincrement())
  consumoArea           Float
  factorEmisionAguaId   Int
  totalGEI              Float
  areaId                Int
  consumoAguaCalculosId Int

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  area                area?               @relation(fields: [areaId], references: [id])
  consumoAguaCaluclos ConsumoAguaCalculos @relation(fields: [consumoAguaCalculosId], references: [id])
  factorEmisionAgua   FactorEmisionAgua?  @relation(fields: [factorEmisionAguaId], references: [id])

  @@map("consumoaguacalculosdetail")
}

model PeriodoCalculo {
  id                          Int                    @id @default(autoincrement())
  fechaInicio                 String?
  fechaFin                    String?
  yearInicio                  String?
  yearFin                     String?
  created_at                  DateTime               @default(now())
  updated_at                  DateTime               @updatedAt
  ConsumoAguaCalculos         ConsumoAguaCalculos[]
  EnergiaCalculos             EnergiaCalculos[]
  fertilizanteCalculos        fertilizanteCalculos[]
  combustibleCalculos         combustibleCalculos[]
  ConsumoPapelCalculos        ConsumoPapelCalculos[]
  ConsumoRefrigeranteCalculos RefrigeranteCalculos[]
  ConsumibleCalculos          ConsumibleCalculos[]
  TaxiCalculos                TaxiCalculos[]

  @@map("periodocalculo")
}

model TipoEquipoRefrigerante {
  id                  Int            @id @default(autoincrement())
  nombre              String
  created_at          DateTime       @default(now())
  updated_at          DateTime       @updatedAt
  ConsumoRefrigerante Refrigerante[]

  @@map("tipoequiporefrigerante")
}

model TipoRefrigerante {
  id                         Int                          @id @default(autoincrement())
  nombre                     String
  formula                    String
  created_at                 DateTime                     @default(now())
  updated_at                 DateTime                     @updatedAt
  ConsumoRefrigerante        Refrigerante[]
  FactorTipoRefrigerante     FactorTipoRefrigerante[]
  RefrigeranteCalculosDetail RefrigeranteCalculosDetail[]
  RefrigeranteCalculos       RefrigeranteCalculos[]

  @@map("tiporefrigerante")
}

model FactorTipoRefrigerante {
  id                 Int      @id @default(autoincrement())
  PCA100             Float
  anioId             Int
  tipoRefrigeranteId Int
  created_at         DateTime @default(now())
  updated_at         DateTime @updatedAt

  anio                       Anio?                        @relation(fields: [anioId], references: [id])
  tipoRefrigerante           TipoRefrigerante?            @relation(fields: [tipoRefrigeranteId], references: [id])
  RefrigeranteCalculosDetail RefrigeranteCalculosDetail[]

  @@map("factortiporefrigerante")
}

model Refrigerante {
  id                       Int      @id @default(autoincrement())
  tipo                     String // I: INSTALACION, O: OPERACION, D:DISPOSICION
  tipoEquipoRefrigeranteId Int
  tipoRefrigeranteId       Int
  sedeId                   Int
  anioId                   Int
  numeroEquipos            Int
  cargaAnual               Float
  fugaInstalacion          Float?
  fugaUso                  Float?
  tiempoUso                Float?
  fraccionDisposicion      Float?
  fraccionRecuperacion     Float?
  created_at               DateTime @default(now())
  updated_at               DateTime @updatedAt

  tipoEquipoRefrigerante TipoEquipoRefrigerante? @relation(fields: [tipoEquipoRefrigeranteId], references: [id])
  tipoRefrigerante       TipoRefrigerante?       @relation(fields: [tipoRefrigeranteId], references: [id])
  sede                   Sede?                   @relation(fields: [sedeId], references: [id])
  anio                   Anio?                   @relation(fields: [anioId], references: [id])

  @@map("refrigerante")
}

model RefrigeranteCalculos {
  id                 Int      @id @default(autoincrement())
  tipoRefrigeranteId Int
  periodoCalculoId   Int
  sedeId             Int
  instalacion        Float?
  operacion          Float?
  disposicion        Float?
  perdidaTotal       Float
  totalGEI           Float
  created_at         DateTime @default(now())
  updated_at         DateTime @updatedAt

  tipoRefrigerante           TipoRefrigerante?            @relation(fields: [tipoRefrigeranteId], references: [id])
  PeriodoCalculo             PeriodoCalculo?              @relation(fields: [periodoCalculoId], references: [id])
  sede                       Sede?                        @relation(fields: [sedeId], references: [id])
  RefrigeranteCalculosDetail RefrigeranteCalculosDetail[]

  @@map("refrigerantecalculos")
}

model RefrigeranteCalculosDetail {
  id                       Int      @id @default(autoincrement())
  tipoRefrigeranteId       Int
  factorTipoRefrigeranteId Int
  sedeId                   Int
  anioId                   Int
  instalacion              Float? // # EQUIPOS * CARGA ANUAL * % FUGA INSTALACION
  operacion                Float? // # EQUIPOS * CARGA ANUAL * AÑOS DE USO * % FUGA USO
  disposicion              Float? // # EQUIPOS * CARGA ANUAL * % FRACCION DISPOSICION * % FRACCION RECUPERACION
  perdidaTotal             Float
  totalGEI                 Float
  refrigeranteCalculosId   Int
  created_at               DateTime @default(now())
  updated_at               DateTime @updatedAt

  tipoRefrigerante       TipoRefrigerante?       @relation(fields: [tipoRefrigeranteId], references: [id])
  factorTipoRefrigerante FactorTipoRefrigerante? @relation(fields: [factorTipoRefrigeranteId], references: [id])
  refrigeranteCalculos   RefrigeranteCalculos?   @relation(fields: [refrigeranteCalculosId], references: [id])
  sede                   Sede?                   @relation(fields: [sedeId], references: [id])
  anio                   Anio?                   @relation(fields: [anioId], references: [id])
}

// CONSUMIBLES GENERALES
model CategoriaConsumible {
  id             Int              @id @default(autoincrement())
  nombre         String
  created_at     DateTime         @default(now())
  updated_at     DateTime         @updatedAt
  TipoConsumible TipoConsumible[]

  @@map("categoriaconsumible")
}

model GrupoConsumible {
  id             Int              @id @default(autoincrement())
  nombre         String
  created_at     DateTime         @default(now())
  updated_at     DateTime         @updatedAt
  TipoConsumible TipoConsumible[]

  @@map("grupoconsumible")
}

model ProcesoConsumible {
  id             Int              @id @default(autoincrement())
  nombre         String
  created_at     DateTime         @default(now())
  updated_at     DateTime         @updatedAt
  TipoConsumible TipoConsumible[]

  @@map("procesoconsumible")
}

model DescripcionConsumible {
  id             Int              @id @default(autoincrement())
  descripcion    String
  created_at     DateTime         @default(now())
  updated_at     DateTime         @updatedAt
  TipoConsumible TipoConsumible[]

  @@map("descripcionconsumible")
}

model TipoConsumible {
  id            Int      @id @default(autoincrement())
  nombre        String
  unidad        String
  descripcionId Int
  categoriaId   Int
  grupoId       Int
  procesoId     Int
  created_at    DateTime @default(now())
  updated_at    DateTime @updatedAt

  descripcion              DescripcionConsumible?     @relation(fields: [descripcionId], references: [id])
  categoria                CategoriaConsumible        @relation(fields: [categoriaId], references: [id])
  grupo                    GrupoConsumible            @relation(fields: [grupoId], references: [id])
  proceso                  ProcesoConsumible          @relation(fields: [procesoId], references: [id])
  FactorTipoConsumible     FactorTipoConsumible[]
  Consumible               Consumible[]
  ConsumibleCalculos       ConsumibleCalculos[]
  ConsumibleCalculosDetail ConsumibleCalculosDetail[]

  @@map("tipoconsumible")
}

model FactorTipoConsumible {
  id               Int      @id @default(autoincrement())
  factor           Float
  tipoConsumibleId Int
  anioId           Int
  fuente           String?
  link             String?
  created_at       DateTime @default(now())
  updated_at       DateTime @updatedAt

  tipoConsumible           TipoConsumible?            @relation(fields: [tipoConsumibleId], references: [id])
  anio                     Anio?                      @relation(fields: [anioId], references: [id])
  ConsumibleCalculosDetail ConsumibleCalculosDetail[]

  @@unique([tipoConsumibleId, anioId])
  @@map("factortipoconsumible")
}

model Consumible {
  id               Int      @id @default(autoincrement())
  tipoConsumibleId Int
  sedeId           Int
  anioId           Int
  mesId            Int
  anio_mes         Int
  pesoTotal        Float
  created_at       DateTime @default(now())
  updated_at       DateTime @updatedAt

  tipoConsumible TipoConsumible? @relation(fields: [tipoConsumibleId], references: [id])
  sede           Sede?           @relation(fields: [sedeId], references: [id])
  mes            Mes?            @relation(fields: [mesId], references: [id])
  anio           Anio?           @relation(fields: [anioId], references: [id])

  @@map("consumible")
}

model ConsumibleCalculos {
  id               Int      @id @default(autoincrement())
  tipoConsumibleId Int
  periodoCalculoId Int
  sedeId           Int
  pesoTotal        Float
  totalGEI         Float
  created_at       DateTime @default(now())
  updated_at       DateTime @updatedAt

  tipoConsumible           TipoConsumible?            @relation(fields: [tipoConsumibleId], references: [id])
  sede                     Sede?                      @relation(fields: [sedeId], references: [id])
  PeriodoCalculo           PeriodoCalculo?            @relation(fields: [periodoCalculoId], references: [id])
  ConsumibleCalculosDetail ConsumibleCalculosDetail[]

  @@map("consumiblecalculos")
}

model ConsumibleCalculosDetail {
  id                     Int      @id @default(autoincrement())
  tipoConsumibleId       Int
  factorTipoConsumibleId Int
  anioId                 Int
  sedeId                 Int
  pesoTotal              Float
  totalGEI               Float
  consumibleCalculosId   Int
  created_at             DateTime @default(now())
  updated_at             DateTime @updatedAt

  tipoConsumible       TipoConsumible?       @relation(fields: [tipoConsumibleId], references: [id])
  factorTipoConsumible FactorTipoConsumible? @relation(fields: [factorTipoConsumibleId], references: [id])
  anio                 Anio?                 @relation(fields: [anioId], references: [id])
  sede                 Sede?                 @relation(fields: [sedeId], references: [id])
  consumibleCalculos   ConsumibleCalculos?   @relation(fields: [consumibleCalculosId], references: [id])

  @@map("consumiblecalculosdetail")
}
