datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Access {
  id           Int      @id @default(autoincrement())
  type_user_id Int
  type_user    TypeUser @relation(fields: [type_user_id], references: [id])

  @@index([type_user_id])
}

model TypeUser {
  id        Int      @id @default(autoincrement())
  type_name String   @db.VarChar(45)
  users     User[]
  access    Access[]
}

model User {
  id           Int      @id @default(autoincrement())
  name         String   @db.VarChar(255)
  email        String   @unique
  telefono     String   @db.VarChar(45)
  password     String   @db.VarChar(255)
  type_user_id Int
  sede_id      Int?
  type_user    TypeUser @relation(fields: [type_user_id], references: [id])
  sede         Sede?    @relation(fields: [sede_id], references: [id])

  @@index([type_user_id])
}

model Sede {
  id                   Int                    @id @default(autoincrement())
  name                 String                 @db.VarChar(45)
  combustibles         Combustible[]
  fertilizante         Fertilizante[]
  ConsumoPapel         ConsumoPapel[]
  combustibleCalculos  combustibleCalculos[]
  taxi                 Taxi[]
  fertilizanteCalculos fertilizanteCalculos[]
  area                 area[]
  User                 User[]
}

model tipoCombustibleFactor {
  id                  Int                   @id @default(autoincrement())
  valorCalorico       Float                 @db.Float
  factorEmisionCO2    Float                 @db.Float
  factorEmisionCH4    Float                 @db.Float
  factorEmisionN2O    Float                 @db.Float
  anio_id             Int
  tipoCombustible_id  Int
  created_at          DateTime
  updated_at          DateTime
  anio                Anio                  @relation(fields: [anio_id], references: [id])
  tipoCombustible     tipoCombustible       @relation(fields: [tipoCombustible_id], references: [id])
  combustibleCalculos combustibleCalculos[]
}

model tipoCombustible {
  id          Int    @id @default(autoincrement())
  nombre      String @db.VarChar(45)
  abreviatura String @db.VarChar(45)
  unidad      String @db.VarChar(45)

  created_at            DateTime
  updated_at            DateTime
  tipoCombustibleFactor tipoCombustibleFactor[]
  Combustible           Combustible[]
}

model Mes {
  id             Int              @id @default(autoincrement())
  nombre         String           @db.VarChar(45)
  created_at     DateTime
  updated_at     DateTime
  combustibles   Combustible[]
  Taxi           Taxi[]
  consumoEnergia consumoEnergia[]
  ConsumoAgua    ConsumoAgua[]
}

model Anio {
  id         Int      @id @default(autoincrement())
  nombre     String   @db.VarChar(45)
  created_at DateTime
  updated_at DateTime

  combustibles          Combustible[]
  fertilizante          Fertilizante[]
  consumoPapel          ConsumoPapel[]
  Taxi                  Taxi[]
  consumoEnergia        consumoEnergia[]
  factorConversionSEIN  factorConversionSEIN[]
  ConsumoAgua           ConsumoAgua[]
  tipoCombustibleFactor tipoCombustibleFactor[]
  FactorEmisionAgua     FactorEmisionAgua[]
}

model Combustible {
  id                 Int    @id @default(autoincrement())
  tipo               String @db.VarChar(45)
  tipoEquipo         String @db.VarChar(45)
  consumo            Float  @db.Float
  tipoCombustible_id Int
  mes_id             Int
  anio_id            Int
  sede_id            Int
  anio_mes           Int

  created_at DateTime
  updated_at DateTime

  tipoCombustible tipoCombustible? @relation(fields: [tipoCombustible_id], references: [id])
  mes             Mes?             @relation(fields: [mes_id], references: [id])
  anio            Anio?            @relation(fields: [anio_id], references: [id])
  sede            Sede?            @relation(fields: [sede_id], references: [id])
}

model Documento {
  id        Int    @id @default(autoincrement())
  nombre    String @db.VarChar(255)
  contenido Bytes

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  fertilizante Fertilizante?
}

model TipoFertilizante {
  id                  Int      @id @default(autoincrement())
  clase               String   @db.VarChar(45) // Organico o Sintetico
  nombre              String   @db.VarChar(45)
  porcentajeNitrogeno Float    @db.Float
  unidad              String   @db.VarChar(45)
  created_at          DateTime @default(now())
  updated_at          DateTime @updatedAt

  fertilizantes        Fertilizante[]
  fertilizanteCalculos fertilizanteCalculos[]
}

model Fertilizante {
  id                  Int     @id @default(autoincrement())
  tipoFertilizante_id Int
  cantidad            Float   @db.Float
  is_ficha            Boolean @default(false)
  ficha_id            Int?    @unique
  sede_id             Int?
  anio_id             Int?

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  tipoFertilizante TipoFertilizante? @relation(fields: [tipoFertilizante_id], references: [id])
  ficha            Documento?        @relation(fields: [ficha_id], references: [id])
  sede             Sede?             @relation(fields: [sede_id], references: [id])
  anio             Anio?             @relation(fields: [anio_id], references: [id])
}

model TipoPapel {
  id                   Int     @id @default(autoincrement())
  nombre               String  @db.VarChar(50)
  gramaje              Float   @db.Float
  unidad_paquete       String  @db.VarChar(45)
  is_certificado       Boolean @default(false)
  is_reciclable        Boolean @default(false)
  porcentaje_reciclado Float?  @db.Float
  nombre_certificado   String? @db.VarChar(50)

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  consumoPapel ConsumoPapel[]
}

model ConsumoPapel {
  id               Int     @id @default(autoincrement())
  tipoPapel_id     Int
  cantidad_paquete Int
  comentario       String?
  anio_id          Int
  sede_id          Int?

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  tipoPapel TipoPapel @relation(fields: [tipoPapel_id], references: [id])
  anio      Anio      @relation(fields: [anio_id], references: [id])
  sede      Sede?     @relation(fields: [sede_id], references: [id])
}

// CALCULOS
// POTENCIAL DE CALIENTAMIENTO GLOBAL
model GWP {
  id         Int      @id @default(autoincrement())
  nombre     String   @db.VarChar(45)
  formula    String   @db.VarChar(45)
  valor      Float    @db.Float
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

// A1_1 COMBUSTIBLES
model combustibleCalculos {
  id                      Int    @id @default(autoincrement())
  tipo                    String @db.VarChar(45)
  tipoCombustibleFactorId Int
  consumoTotal            Float  @db.Float
  valorCalorico           Float  @db.Float
  consumo                 Float  @db.Float
  emisionCO2              Float  @db.Float
  emisionCH4              Float  @db.Float
  emisionN2O              Float  @db.Float
  totalGEI                Float  @db.Float
  sedeId                  Int    @db.Int
  periodoCalculoId        Int?   @db.Int

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  tipoCombustibleFactor tipoCombustibleFactor? @relation(fields: [tipoCombustibleFactorId], references: [id])
  sede                  Sede?                  @relation(fields: [sedeId], references: [id])
  PeriodoCalculo        PeriodoCalculo?        @relation(fields: [periodoCalculoId], references: [id])
}

// // A1_5 - FERTILIZANTES
// model factorEmision {
//   id                   Int                    @id @default(autoincrement())
//   valor                Float                  @db.Float
//   fertilizanteCalculos fertilizanteCalculos[]
// }

model fertilizanteCalculos {
  id                     Int    @id @default(autoincrement())
  tipofertilizanteId     Int
  consumoTotal           Float  @db.Float
  cantidadAporte         Float  @db.Float
  emisionDirecta         Float  @db.Float
  totalEmisionesDirectas Float  @db.Float
  emisionGEI             Float? @db.Float
  sedeId                 Int    @db.Int
  periodoCalculoId       Int?   @db.Int

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  sede             Sede?             @relation(fields: [sedeId], references: [id])
  periodoCalculo   PeriodoCalculo?   @relation(fields: [periodoCalculoId], references: [id])
  TipoFertilizante TipoFertilizante? @relation(fields: [tipofertilizanteId], references: [id])
}

model consumoEnergia {
  id               Int    @id @default(autoincrement())
  areaId           Int
  numeroSuministro String @db.VarChar(45)
  consumo          Float  @db.Float
  mes_id           Int
  anio_id          Int
  anio_mes         Int

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  mes  Mes?  @relation(fields: [mes_id], references: [id])
  anio Anio? @relation(fields: [anio_id], references: [id])
  area area? @relation(fields: [areaId], references: [id])
}

model area {
  id         Int      @id @default(autoincrement())
  nombre     String   @db.VarChar(45)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  sede_id    Int?

  sede Sede? @relation(fields: [sede_id], references: [id])

  ConsumoAgua               ConsumoAgua[]
  ConsumoAguaCalculos       ConsumoAguaCalculos[]
  consumoEnergia            consumoEnergia[]
  EnergiaCalculos           EnergiaCalculos[]
  EnergiaCalculosDetail     EnergiaCalculosDetail[]
  ConsumoAguaCalculosDetail ConsumoAguaCalculosDetail[]
}

model EnergiaCalculos {
  id               Int   @id @default(autoincrement())
  consumoArea      Float @db.Float
  factorConversion Float @db.Float
  consumoTotal     Float @db.Float
  emisionCO2       Float @db.Float
  emisionCH4       Float @db.Float
  emisionN2O       Float @db.Float
  totalGEI         Float @db.Float
  areaId           Int   @db.Int
  periodoCalculoId Int?  @db.Int

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  area                  area?                   @relation(fields: [areaId], references: [id])
  PeriodoCalculo        PeriodoCalculo?         @relation(fields: [periodoCalculoId], references: [id])
  EnergiaCalculosDetail EnergiaCalculosDetail[]
}

model EnergiaCalculosDetail {
  id                     Int   @id @default(autoincrement())
  consumoArea            Float @db.Float
  factorConversion       Float @db.Float
  factorConversionSEINId Int   @db.Int
  consumoTotal           Float @db.Float
  emisionCO2             Float @db.Float
  emisionCH4             Float @db.Float
  emisionN2O             Float @db.Float
  totalGEI               Float @db.Float
  areaId                 Int
  energiaCalculosId      Int   @db.Int

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  area                 area?                @relation(fields: [areaId], references: [id])
  EnergiaCalculos      EnergiaCalculos      @relation(fields: [energiaCalculosId], references: [id])
  factorConversionSEIN factorConversionSEIN @relation(fields: [factorConversionSEINId], references: [id])
}

model factorConversionSEIN {
  id         Int      @id @default(autoincrement())
  factorCO2  Float    @db.Float
  factorCH4  Float    @db.Float
  factorN2O  Float    @db.Float
  anioId     Int      @unique
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  anio                  Anio                    @relation(fields: [anioId], references: [id])
  EnergiaCalculosDetail EnergiaCalculosDetail[]
}

model Taxi {
  id                Int    @id @default(autoincrement())
  unidadContratante String
  lugarSalida       String
  lugarDestino      String
  montoGastado      Float
  sede_id           Int
  mes_id            Int
  anio_id           Int
  anio_mes          Int

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  mes  Mes?  @relation(fields: [mes_id], references: [id])
  anio Anio? @relation(fields: [anio_id], references: [id])
  sede Sede? @relation(fields: [sede_id], references: [id])
}

// AGUA A3_5
model ConsumoAgua {
  id            Int     @id @default(autoincrement())
  consumo       Float   @db.Float
  codigoMedidor String? @db.VarChar(45)
  fuenteAgua    String  @db.VarChar(45) // Red Publica o Pozo
  area_id       Int?
  mes_id        Int
  anio_id       Int
  anio_mes      Int

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  anio Anio  @relation(fields: [anio_id], references: [id])
  mes  Mes   @relation(fields: [mes_id], references: [id])
  area area? @relation(fields: [area_id], references: [id])
}

model FactorEmisionAgua {
  id      Int   @id @default(autoincrement())
  factor  Float @db.Float
  anio_id Int

  anio                      Anio                        @relation(fields: [anio_id], references: [id])
  ConsumoAguaCalculosDetail ConsumoAguaCalculosDetail[]
}

model ConsumoAguaCalculos {
  id               Int   @id @default(autoincrement())
  consumoArea      Float @db.Float
  totalGEI         Float @db.Float
  areaId           Int
  periodoCalculoId Int?  @db.Int

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  area                      area?                       @relation(fields: [areaId], references: [id])
  PeriodoCalculo            PeriodoCalculo?             @relation(fields: [periodoCalculoId], references: [id])
  ConsumoAguaCalculosDetail ConsumoAguaCalculosDetail[]
}

model ConsumoAguaCalculosDetail {
  id                    Int   @id @default(autoincrement())
  consumoArea           Float @db.Float
  factorEmisionAguaId   Int
  totalGEI              Float @db.Float
  areaId                Int
  consumoAguaCalculosId Int   @db.Int

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  area                area?               @relation(fields: [areaId], references: [id])
  consumoAguaCaluclos ConsumoAguaCalculos @relation(fields: [consumoAguaCalculosId], references: [id])
  factorEmisionAgua   FactorEmisionAgua?  @relation(fields: [factorEmisionAguaId], references: [id])
}

model PeriodoCalculo {
  id                   Int                    @id @default(autoincrement())
  fechaInicio          String?
  fechaFin             String?
  created_at           DateTime               @default(now())
  updated_at           DateTime               @updatedAt
  ConsumoAguaCalculos  ConsumoAguaCalculos[]
  EnergiaCalculos      EnergiaCalculos[]
  fertilizanteCalculos fertilizanteCalculos[]
  combustibleCalculos  combustibleCalculos[]
}
