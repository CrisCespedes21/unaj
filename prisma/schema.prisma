datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}


model Access {
  id           Int      @id @default(autoincrement())
  type_user_id Int
  type_user    TypeUser @relation(fields: [type_user_id], references: [id])

  @@index([type_user_id])
}

model TypeUser {
  id        Int      @id @default(autoincrement())
  type_name String   @db.VarChar(45)
  users     User[]
  access    Access[]
}

model User {
  id           Int      @id @default(autoincrement())
  name         String   @db.VarChar(255)
  email        String   @unique
  telefono     String   @db.VarChar(45)
  password     String   @db.VarChar(255)
  type_user_id Int
  type_user    TypeUser @relation(fields: [type_user_id], references: [id])

  @@index([type_user_id])
}

model Sede {
  id           Int            @id @default(autoincrement())
  name         String         @db.VarChar(45)
  combustibles Combustible[]
  fertilizante Fertilizante[]
}

model tipoCombustible {
  id           Int           @id @default(autoincrement())
  nombre       String        @db.VarChar(45)
  abreviatura  String        @db.VarChar(45)
  unidad       String        @db.VarChar(45)
  created_at   DateTime
  updated_at   DateTime
  combustibles Combustible[]
}

model Mes {
  id           Int           @id @default(autoincrement())
  nombre       String        @db.VarChar(45)
  created_at   DateTime
  updated_at   DateTime
  combustibles Combustible[]
}

model Anio {
  id           Int            @id @default(autoincrement())
  nombre       String         @db.VarChar(45)
  created_at   DateTime
  updated_at   DateTime
  combustibles Combustible[]
  fertilizante Fertilizante[]
}

model Combustible {
  id                 Int    @id @default(autoincrement())
  tipo               String @db.VarChar(45)
  tipoEquipo         String @db.VarChar(45)
  consumo            Float  @db.Float
  tipoCombustible_id Int
  mes_id             Int
  anio_id            Int
  sede_id            Int

  created_at DateTime
  updated_at DateTime

  tipoCombustible tipoCombustible? @relation(fields: [tipoCombustible_id], references: [id])
  mes             Mes?             @relation(fields: [mes_id], references: [id])
  anio            Anio?            @relation(fields: [anio_id], references: [id])
  sede            Sede?            @relation(fields: [sede_id], references: [id])
}

model TipoFertilizante {
  id                  Int      @id @default(autoincrement())
  clase               String   @db.VarChar(45) // Cambiado a String
  nombre              String   @db.VarChar(45)
  porcentajeNitrogeno Float    @db.Float
  created_at          DateTime @default(now())
  updated_at          DateTime @updatedAt

  fertilizantes Fertilizante[]
}

model Documento {
  id        Int    @id @default(autoincrement())
  nombre    String @db.VarChar(255)
  contenido Bytes

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  fertilizante Fertilizante?
}

model Fertilizante {
  id                  Int     @id @default(autoincrement())
  tipoFertilizante_id Int
  cantidad            Float   @db.Float
  is_ficha            Boolean @default(false)
  ficha_id            Int?    @unique
  sede_id             Int?
  anio_id             Int?

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  tipoFertilizante TipoFertilizante @relation(fields: [tipoFertilizante_id], references: [id])
  ficha            Documento?       @relation(fields: [ficha_id], references: [id])
  sede             Sede?            @relation(fields: [sede_id], references: [id])
  anio             Anio?            @relation(fields: [anio_id], references: [id])
}
